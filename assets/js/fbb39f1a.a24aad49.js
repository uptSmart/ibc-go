"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6560],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=o.createContext({}),s=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(a.Provider,{value:t},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=s(n),u=i,m=h["".concat(a,".").concat(u)]||h[u]||d[u]||r;return n?o.createElement(m,c(c({ref:t},p),{},{components:n})):o.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,c=new Array(r);c[0]=u;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[h]="string"==typeof e?e:i,c[1]=l;for(var s=2;s<r;s++)c[s]=n[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},27945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(87462),i=(n(67294),n(3905));const r={title:"Connection",sidebar_label:"Connection",sidebar_position:4,slug:"/ibc/light-clients/localhost/connection"},c="Localhost connections",l={unversionedId:"light-clients/localhost/connection",id:"light-clients/localhost/connection",title:"Connection",description:"The 09-localhost light client module integrates with core IBC through a single sentinel localhost connection.",source:"@site/docs/03-light-clients/02-localhost/04-connection.md",sourceDirName:"03-light-clients/02-localhost",slug:"/ibc/light-clients/localhost/connection",permalink:"/main/ibc/light-clients/localhost/connection",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Connection",sidebar_label:"Connection",sidebar_position:4,slug:"/ibc/light-clients/localhost/connection"},sidebar:"defaultSidebar",previous:{title:"ClientState",permalink:"/main/ibc/light-clients/localhost/client-state"},next:{title:"State Verification",permalink:"/main/ibc/light-clients/localhost/state-verification"}},a={},s=[],p={toc:s},h="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(h,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"localhost-connections"},"Localhost connections"),(0,i.kt)("p",null,"The 09-localhost light client module integrates with core IBC through a single sentinel localhost connection.\nThe sentinel ",(0,i.kt)("inlineCode",{parentName:"p"},"ConnectionEnd")," is stored by default in the core IBC store."),(0,i.kt)("p",null,"This enables channel handshakes to be initiated out of the box by supplying the localhost connection identifier (",(0,i.kt)("inlineCode",{parentName:"p"},"connection-localhost"),") in the ",(0,i.kt)("inlineCode",{parentName:"p"},"connectionHops")," parameter of ",(0,i.kt)("inlineCode",{parentName:"p"},"MsgChannelOpenInit"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ConnectionEnd")," is created and set in store via the ",(0,i.kt)("inlineCode",{parentName:"p"},"InitGenesis")," handler of the 03-connection submodule in core IBC.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"ConnectionEnd")," and its ",(0,i.kt)("inlineCode",{parentName:"p"},"Counterparty")," both reference the ",(0,i.kt)("inlineCode",{parentName:"p"},"09-localhost")," client identifier, and share the localhost connection identifier ",(0,i.kt)("inlineCode",{parentName:"p"},"connection-localhost"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// CreateSentinelLocalhostConnection creates and sets the sentinel localhost connection end in the IBC store.\nfunc (k Keeper) CreateSentinelLocalhostConnection(ctx sdk.Context) {\n  counterparty := types.NewCounterparty(exported.LocalhostClientID, exported.LocalhostConnectionID, commitmenttypes.NewMerklePrefix(k.GetCommitmentPrefix().Bytes()))\n  connectionEnd := types.NewConnectionEnd(types.OPEN, exported.LocalhostClientID, counterparty, types.GetCompatibleVersions(), 0)\n\n  k.SetConnection(ctx, exported.LocalhostConnectionID, connectionEnd)\n}\n")),(0,i.kt)("p",null,"Note that connection handshakes are disallowed when using the ",(0,i.kt)("inlineCode",{parentName:"p"},"09-localhost")," client type."))}d.isMDXComponent=!0}}]);
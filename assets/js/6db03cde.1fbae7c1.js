"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,d=p["".concat(s,".").concat(m)]||p[m]||h[m]||o;return n?a.createElement(d,i(i({ref:t},u),{},{components:n})):a.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},60844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={title:"Overview",sidebar_label:"Overview",sidebar_position:1,slug:"/apps/interchain-accounts/overview"},i="Overview",c={unversionedId:"apps/interchain-accounts/overview",id:"apps/interchain-accounts/overview",title:"Overview",description:"Learn about what the Interchain Accounts module is",source:"@site/docs/02-apps/02-interchain-accounts/01-overview.md",sourceDirName:"02-apps/02-interchain-accounts",slug:"/apps/interchain-accounts/overview",permalink:"/main/apps/interchain-accounts/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overview",sidebar_label:"Overview",sidebar_position:1,slug:"/apps/interchain-accounts/overview"},sidebar:"defaultSidebar",previous:{title:"Client",permalink:"/main/apps/transfer/client"},next:{title:"Development Use Cases",permalink:"/main/apps/interchain-accounts/development"}},s={},l=[{value:"What is the Interchain Accounts module?",id:"what-is-the-interchain-accounts-module",level:2},{value:"Concepts",id:"concepts",level:2},{value:"SDK security model",id:"sdk-security-model",level:2}],u={toc:l},p="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("admonition",{title:"Synopsis",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Learn about what the Interchain Accounts module is")),(0,r.kt)("h2",{id:"what-is-the-interchain-accounts-module"},"What is the Interchain Accounts module?"),(0,r.kt)("p",null,"Interchain Accounts is the Cosmos SDK implementation of the ICS-27 protocol, which enables cross-chain account management built upon IBC."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"How does an interchain account differ from a regular account?")),(0,r.kt)("p",null,"Regular accounts use a private key to sign transactions. Interchain Accounts are instead controlled programmatically by counterparty chains via IBC packets."),(0,r.kt)("h2",{id:"concepts"},"Concepts"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Host Chain"),": The chain where the interchain account is registered. The host chain listens for IBC packets from a controller chain which should contain instructions (e.g. Cosmos SDK messages) for which the interchain account will execute."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Controller Chain"),": The chain registering and controlling an account on a host chain. The controller chain sends IBC packets to the host chain to control the account."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Interchain Account"),": An account on a host chain created using the ICS-27 protocol. An interchain account has all the capabilities of a normal account. However, rather than signing transactions with a private key, a controller chain will send IBC packets to the host chain which signals what transactions the interchain account should execute."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Authentication Module"),": A custom application module on the controller chain that uses the Interchain Accounts module to build custom logic for the creation & management of interchain accounts. It can be either an IBC application module using the ",(0,r.kt)("a",{parentName:"p",href:"/main/apps/interchain-accounts/legacy/keeper-api"},"legacy API"),", or a regular Cosmos SDK application module sending messages to the controller submodule's ",(0,r.kt)("inlineCode",{parentName:"p"},"MsgServer")," (this is the recommended approach from ibc-go v6 if access to packet callbacks is not needed). Please note that the legacy API will eventually be removed and IBC applications will not be able to use them in later releases."),(0,r.kt)("h2",{id:"sdk-security-model"},"SDK security model"),(0,r.kt)("p",null,"SDK modules on a chain are assumed to be trustworthy. For example, there are no checks to prevent an untrustworthy module from accessing the bank keeper."),(0,r.kt)("p",null,"The implementation of ICS-27 in ibc-go uses this assumption in its security considerations."),(0,r.kt)("p",null,"The implementation assumes other IBC application modules will not bind to ports within the ICS-27 namespace."))}h.isMDXComponent=!0}}]);
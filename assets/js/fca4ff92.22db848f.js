"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6297],{67952:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var n=a(87462),i=(a(67294),a(3905)),o=a(1841),s=a.n(o);const l={title:"Scaffold a React App",sidebar_label:"Scaffold a React App",sidebar_position:5,slug:"/fee/scaffold-react"},c="Scaffold a React app",r={unversionedId:"fee/scaffold-react",id:"fee/scaffold-react",title:"Scaffold a React App",description:"In this section, we will scaffold a React app using Ignite CLI, and test it. This will be the base for us to add Fee Middleware support.",source:"@site/tutorials/01-fee/05-scaffold-react.md",sourceDirName:"01-fee",slug:"/fee/scaffold-react",permalink:"/tutorials/fee/scaffold-react",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Scaffold a React App",sidebar_label:"Scaffold a React App",sidebar_position:5,slug:"/fee/scaffold-react"},sidebar:"defaultSidebar",previous:{title:"Wire Up the ICS-29 Fee Middleware to a Cosmos SDK Blockchain",permalink:"/tutorials/fee/wire-feeibc-mod"},next:{title:"Wire up ICS-29 Fees to the React App",permalink:"/tutorials/fee/fee-react"}},p={},d=[{value:"Set up test wallets",id:"set-up-test-wallets",level:2},{value:"Scaffold a React app",id:"scaffold-a-react-app-1",level:2},{value:"Update the dependencies",id:"update-the-dependencies",level:3},{value:"Fix the bugs",id:"fix-the-bugs",level:3},{value:"Test the app",id:"test-the-app",level:2},{value:"Start the chain",id:"start-the-chain",level:3},{value:"Start the React app",id:"start-the-react-app",level:3}],m={toc:d},h="wrapper";function u(e){let{components:t,...o}=e;return(0,i.kt)(h,(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"scaffold-a-react-app"},"Scaffold a React app"),(0,i.kt)("p",null,"In this section, we will scaffold a React app using Ignite CLI, and test it. This will be the base for us to add Fee Middleware support."),(0,i.kt)("h2",{id:"set-up-test-wallets"},"Set up test wallets"),(0,i.kt)("p",null,"We will use 4 test wallets for this tutorial. Use the following mnemonic phrases to import them into Keplr."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="anna.mnemonic"',title:'"anna.mnemonic"'},"antenna hen skate tooth during heart agent code exclude measure text math time budget industry cage eagle prosper program enter cruise join tragic one\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="bo.mnemonic"',title:'"bo.mnemonic"'},"uphold tube excess primary night armor circle puzzle pet memory empower conduct blush hat glare tortoise into embody powder raise punch promote kidney catalog\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="charlie.mnemonic"',title:'"charlie.mnemonic"'},"rug cotton ceiling olive cake october way spy million grain actress sponsor\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="damian.mnemonic"',title:'"damian.mnemonic"'},"mansion wing limit daughter allow fiscal attend planet viable giggle prison ready\n")),(0,i.kt)("p",null,"Then add these wallet mnemonics to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/srdtrk/cosmoverse2023-ibc-fee-demo/blob/65032986f671e901bc13ab160e3f96a5046857c0/config.yml"},(0,i.kt)("inlineCode",{parentName:"a"},"config.yml"))," so that they are funded automatically by ignite."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yml"',title:'"config.yml"'},"version: 1\naccounts:\n- name: alice\n  coins:\n  - 20000token\n  - 200000000stake\n- name: bob\n  coins:\n  - 10000token\n  - 100000000stake\n# plus-diff-start\n- name: anna\n  coins: \n  - 20000token\n  - 200000000stake\n  mnemonic: antenna hen skate tooth during heart agent code exclude measure text math time budget industry cage eagle prosper program enter cruise join tragic one\n- name: bo\n  coins: \n  - 20000token\n  - 200000000stake\n  mnemonic: uphold tube excess primary night armor circle puzzle pet memory empower conduct blush hat glare tortoise into embody powder raise punch promote kidney catalog\n- name: charlie\n  coins: \n  - 20000token\n  - 200000000stake\n  mnemonic: rug cotton ceiling olive cake october way spy million grain actress sponsor\n- name: damian\n  coins: \n  - 20000token\n  - 200000000stake\n  mnemonic: mansion wing limit daughter allow fiscal attend planet viable giggle prison ready\n# plus-diff-end\nclient:\n  openapi:\n    path: docs/static/openapi.yml\nfaucet:\n  name: bob\n  coins:\n  - 5token\n  - 100000stake\nvalidators:\n- name: alice\n  bonded: 100000000stake\n")),(0,i.kt)("h2",{id:"scaffold-a-react-app-1"},"Scaffold a React app"),(0,i.kt)("p",null,"Scaffold a React app using the following command:"),(0,i.kt)(s(),{className:"language-bash",title:(0,i.kt)("a",{href:"https://github.com/srdtrk/cosmoverse2023-ibc-fee-demo/commit/51b8e3304f5c8c2e2e477dac9985237be676254b"},"View Source"),mdxType:"CodeBlock"},"ignite scaffold react"),(0,i.kt)("p",null,"For this will create a React app within the ",(0,i.kt)("inlineCode",{parentName:"p"},"react/")," directory. The app depends on a typescript client that is yet to be generated.\nThe following command generates the typescript client for the chain, including the Fee Middleware types, and its react hooks."),(0,i.kt)(s(),{className:"language-bash",title:(0,i.kt)("a",{href:"https://github.com/srdtrk/cosmoverse2023-ibc-fee-demo/commit/6b31da02d1ca4fba70d58a3b3e56d9f1e3f06833"},"View Source"),mdxType:"CodeBlock"},"ignite generate hooks --clear-cache"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"You need to add ",(0,i.kt)("inlineCode",{parentName:"p"},"--clear-cache")," to the command above to make sure that the custom modules' (such as Fee Middleware) types are generated.")),(0,i.kt)("h3",{id:"update-the-dependencies"},"Update the dependencies"),(0,i.kt)("p",null,"The generated React app and ts-client depends on the ",(0,i.kt)("inlineCode",{parentName:"p"},"@cosmjs")," packages. We need to update the dependencies to the latest version because the Cosmos SDK version is not fully compatible with the version of ",(0,i.kt)("inlineCode",{parentName:"p"},"@cosmjs")," packages used by the generated app.\nRun the following commands in the root directory of the project to update the dependencies."),(0,i.kt)(s(),{className:"language-bash",title:(0,i.kt)("a",{href:"https://github.com/srdtrk/cosmoverse2023-ibc-fee-demo/commit/dffcf719fd8c223be06d3327e6bc24ec7cf0cec3"},"View Source"),mdxType:"CodeBlock"},"cd ts-client && npm install @cosmjs/launchpad@0.27.1 @cosmjs/proto-signing@0.31.1 @cosmjs/stargate@0.31.1 @keplr-wallet/types@0.11.14"),(0,i.kt)(s(),{className:"language-bash",title:(0,i.kt)("a",{href:"https://github.com/srdtrk/cosmoverse2023-ibc-fee-demo/commit/1c90ffddbab1655038dc296874f427b036afb749"},"View Source"),mdxType:"CodeBlock"},"cd react && npm install @cosmjs/proto-signing@0.31.1 @cosmjs/stargate@0.31.1 @cosmjs/encoding@0.31.1"),(0,i.kt)("h3",{id:"fix-the-bugs"},"Fix the bugs"),(0,i.kt)("p",null,"There is a bug in the generated app that we need to fix. While this is fixed in the next version of Ignite CLI, we need to fix it manually for now since we are using the latest version (",(0,i.kt)("inlineCode",{parentName:"p"},"v0.27.1"),") of Ignite CLI. (The next version of ignite comes with the Fee Middleware wired!)"),(0,i.kt)("p",null,"The bug is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"react/src/hooks/useIbcApplicationsTransferV1/index.ts")," file. For some reason, the generated code uses the string ",(0,i.kt)("inlineCode",{parentName:"p"},"=**")," in certain places. We need to remove this using replace.\nYou can use the following command to fix this (or simply use your editor to replace the string with an empty string):"),(0,i.kt)(s(),{className:"language-bash",title:(0,i.kt)("a",{href:"https://github.com/srdtrk/cosmoverse2023-ibc-fee-demo/commit/17c40b79109712460f8f2613c19f3a5fe9519e33"},"View Source"),mdxType:"CodeBlock"},"sed -i 's/=\\*\\*//g' react/src/hooks/useIbcApplicationsTransferV1/index.ts"),(0,i.kt)("h2",{id:"test-the-app"},"Test the app"),(0,i.kt)("h3",{id:"start-the-chain"},"Start the chain"),(0,i.kt)("p",null,"Start the chain using the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ignite chain serve --reset-once\n")),(0,i.kt)("h3",{id:"start-the-react-app"},"Start the React app"),(0,i.kt)("p",null,"Start the React app in a separate terminal using the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd react\nnpm run dev\n")),(0,i.kt)("p",null,"You should see the following screen:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Landing Page",src:a(78560).Z,width:"3840",height:"1968"})),(0,i.kt)("p",null,"Connect your keplr wallet (as one of the test wallets) to the app. You should see the following screen:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Connected",src:a(60434).Z,width:"3840",height:"1952"})),(0,i.kt)("p",null,"Feel free to play around with the app. You can send tokens to other wallets, however, IBC transfers will not work at this point since we are not running any IBC relayer."))}u.isMDXComponent=!0},78560:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ignite-landing-b0e486ca0cd588b330479985b684ebe3.png"},60434:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ignite-unmodified-80dbee61413ff31a04ce3f9791d80518.png"}}]);
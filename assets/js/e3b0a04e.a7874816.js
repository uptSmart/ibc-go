"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[980],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,f=d["".concat(i,".").concat(c)]||d[c]||u[c]||s;return n?a.createElement(f,o(o({ref:t},m),{},{components:n})):a.createElement(f,o({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<s;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},50294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const s={title:"Params",sidebar_label:"Params",sidebar_position:7,slug:"/apps/transfer/params"},o="Parameters",l={unversionedId:"apps/transfer/params",id:"apps/transfer/params",title:"Params",description:"The IBC transfer application module contains the following parameters:",source:"@site/docs/02-apps/01-transfer/07-params.md",sourceDirName:"02-apps/01-transfer",slug:"/apps/transfer/params",permalink:"/main/apps/transfer/params",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Params",sidebar_label:"Params",sidebar_position:7,slug:"/apps/transfer/params"},sidebar:"defaultSidebar",previous:{title:"Metrics",permalink:"/main/apps/transfer/metrics"},next:{title:"Authorizations",permalink:"/main/apps/transfer/authorizations"}},i={},p=[{value:"<code>SendEnabled</code>",id:"sendenabled",level:2},{value:"<code>ReceiveEnabled</code>",id:"receiveenabled",level:2},{value:"Queries",id:"queries",level:2},{value:"Changing Parameters",id:"changing-parameters",level:2}],m={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"The IBC transfer application module contains the following parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SendEnabled")),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ReceiveEnabled")),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))))),(0,r.kt)("p",null,"The IBC transfer module stores its parameters in its keeper with the prefix of ",(0,r.kt)("inlineCode",{parentName:"p"},"0x03"),"."),(0,r.kt)("h2",{id:"sendenabled"},(0,r.kt)("inlineCode",{parentName:"h2"},"SendEnabled")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"SendEnabled")," parameter controls send cross-chain transfer capabilities for all fungible tokens."),(0,r.kt)("p",null,"To prevent a single token from being transferred from the chain, set the ",(0,r.kt)("inlineCode",{parentName:"p"},"SendEnabled")," parameter to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," and then, depending on the Cosmos SDK version, do one of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For Cosmos SDK v0.46.x or earlier, set the bank module's ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/blob/release/v0.46.x/x/bank/spec/05_params.md#sendenabled"},(0,r.kt)("inlineCode",{parentName:"a"},"SendEnabled")," parameter")," for the denomination to ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},"For Cosmos SDK versions above v0.46.x, set the bank module's ",(0,r.kt)("inlineCode",{parentName:"li"},"SendEnabled")," entry for the denomination to ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," using ",(0,r.kt)("inlineCode",{parentName:"li"},"MsgSetSendEnabled")," as a governance proposal.")),(0,r.kt)("p",null,"::: warning\nDoing so will prevent the token from being transferred between any accounts in the blockchain.\n:::"),(0,r.kt)("h2",{id:"receiveenabled"},(0,r.kt)("inlineCode",{parentName:"h2"},"ReceiveEnabled")),(0,r.kt)("p",null,"The transfers enabled parameter controls receive cross-chain transfer capabilities for all fungible tokens."),(0,r.kt)("p",null,"To prevent a single token from being transferred to the chain, set the ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiveEnabled")," parameter to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," and then, depending on the Cosmos SDK version, do one of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For Cosmos SDK v0.46.x or earlier, set the bank module's ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/blob/release/v0.46.x/x/bank/spec/05_params.md#sendenabled"},(0,r.kt)("inlineCode",{parentName:"a"},"SendEnabled")," parameter")," for the denomination to ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},"For Cosmos SDK versions above v0.46.x, set the bank module's ",(0,r.kt)("inlineCode",{parentName:"li"},"SendEnabled")," entry for the denomination to ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," using ",(0,r.kt)("inlineCode",{parentName:"li"},"MsgSetSendEnabled")," as a governance proposal.")),(0,r.kt)("p",null,"::: warning\nDoing so will prevent the token from being transferred between any accounts in the blockchain.\n:::"),(0,r.kt)("h2",{id:"queries"},"Queries"),(0,r.kt)("p",null,"Current parameter values can be queried via a query message."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},"// proto/ibc/applications/transfer/v1/query.proto\n\n// QueryParamsRequest is the request type for the Query/Params RPC method.\nmessage QueryParamsRequest {}\n\n// QueryParamsResponse is the response type for the Query/Params RPC method.\nmessage QueryParamsResponse {\n  // params defines the parameters of the module.\n  Params params = 1;\n}\n")),(0,r.kt)("p",null,"To execute the query in ",(0,r.kt)("inlineCode",{parentName:"p"},"simd"),", you use the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"simd query ibc-transfer params\n")),(0,r.kt)("h2",{id:"changing-parameters"},"Changing Parameters"),(0,r.kt)("p",null,"To change the parameter values, you must make a governance proposal that executes the ",(0,r.kt)("inlineCode",{parentName:"p"},"MsgUpdateParams")," message."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},"// proto/ibc/applications/transfer/v1/tx.proto\n\n// MsgUpdateParams is the Msg/UpdateParams request type.\nmessage MsgUpdateParams {\n  // signer address (it may be the address that controls the module, which defaults to x/gov unless overwritten).\n  string signer = 1;\n\n  // params defines the transfer parameters to update.\n  //\n  // NOTE: All parameters must be supplied.\n  Params params = 2 [(gogoproto.nullable) = false];\n}\n\n// MsgUpdateParamsResponse defines the response structure for executing a\n// MsgUpdateParams message.\nmessage MsgUpdateParamsResponse {}\n")))}u.isMDXComponent=!0}}]);